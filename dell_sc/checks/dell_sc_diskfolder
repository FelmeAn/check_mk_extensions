#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2017 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

from cmk.base.check_legacy_includes.size_trend import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.check_legacy_includes.df import *  # pylint: disable=wildcard-import,unused-wildcard-import

def inventory_dell_sc_diskfolder(info):
    for nbr, status, name, size, used, alloc, free, spare in info:
        yield "/"+name, None

def check_dell_sc_diskfolder(item, params, info):
    state = {
        1  : ('up', 0),
        2  : ('down', 2),
        3  : ('degraded', 1),
        }
    fslist = []
    for nbr, status, name, size, used, alloc, free, spare in info:
        if "patterns" in params or item == "/"+name:
            fslist.append(("/"+name, saveint(size) * 1024, (saveint(size) - saveint(used)) * 1024, 0))
    return df_check_filesystem_list(item, params, fslist)

check_info["dell_sc_diskfolder"] = {
    'check_function'        : check_dell_sc_diskfolder,
    'inventory_function'    : inventory_dell_sc_diskfolder,
    'service_description'   : 'Disk Folder %s',
    'has_perfdata'          : True,
    'snmp_info'             : ('.1.3.6.1.4.1.674.11000.2000.500.1.2', [
        '25.1.2',    # scDiskFolderNbr
        '25.1.3',    # scDiskFolderStatus
        '25.1.4',    # scDiskFolderName
        '32.1.5',    # scDiskFolderSUTotalSpace2
        '32.1.6',    # scDiskFolderSUUsedSpace2
        '32.1.7',    # scDiskFolderSUAllocSpace
        '32.1.8',    # scDiskFolderSUFreeSpace
        '32.1.9',    # scDiskFolderSUSpareSpace
        ] ),
    'snmp_scan_function'    : lambda oid: 'compellent' in oid('.1.3.6.1.2.1.1.1.0').lower() and oid(".1.3.6.1.4.1.674.11000.2000.500.1.2.1.0"),
    'group'                 : 'filesystem',
    'default_levels_variable': 'filesystem_default_levels',
}
