#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# (c) 2020 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de
#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# .1.3.6.1.4.1.1369.6.1.1.1.0 684 --> STONESOFT-NETNODE-MIB::nodeClusterId.0
# .1.3.6.1.4.1.1369.6.1.1.2.0 1 --> STONESOFT-NETNODE-MIB::nodeMemberId.0
# .1.3.6.1.4.1.1369.6.1.1.3.0 1 --> STONESOFT-NETNODE-MIB::nodeOperState.0

def inventory_stonesoft_firewall_nodeinfo(info):
    if len(info) == 1:
        return [(None, {'operstate': int(info[0][2])})]

def check_stonesoft_firewall_nodeinfo(_no_item, params, info):
    map_operstate = {
        0: (3, 'Unknown'),
        1: (0, 'Online'),
        2: (0, 'Going Online'),
        3: (0, 'Locked Online'),
        4: (0, 'Going Locked Online'),
        5: (2, 'Offline'),
        6: (2, 'Going Offline'),
        7: (2, 'Locked Offline'),
        8: (2, 'Going Locked Offline'),
        9: (1, 'Standby'),
        10: (1, 'Going Standby'),
    }
    if len(info) == 1:
        yield 0, "Cluster-ID: %s" % info[0][0]
        yield 0, "Member-ID: %s" % info[0][1]
        prev_state = params.get('operstate', 0)
        cur_state = int(info[0][2])
        state = 0
        if prev_state != cur_state:
            state = map_operstate[cur_state][0]
        yield state, "State: %s" % map_operstate[cur_state][1]

check_info["stonesoft_firewall_nodeinfo"] = {
    'inventory_function': inventory_stonesoft_firewall_nodeinfo,
    'check_function': check_stonesoft_firewall_nodeinfo,
    'service_description': 'Cluster Node',
    'has_perfdata': False,
    'snmp_info': ('.1.3.6.1.4.1.1369.6.1.1', ['1.0', '2.0', '3.0']),
    'snmp_scan_function': lambda oid: oid('.1.3.6.1.2.1.1.2.0') == '.1.3.6.1.4.1.1369.5.2',
}
