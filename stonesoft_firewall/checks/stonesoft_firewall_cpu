#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# (c) 2020 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de
#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# .1.3.6.1.4.1.1369.6.1.1.4.0 2 --> STONESOFT-NETNODE-MIB::nodeCPULoad.0

def inventory_stonesoft_firewall_cpu(info):
    if len(info) >= 1:
        return [(None, {})]

def check_stonesoft_firewall_cpu(_no_item, params, info):
    num_cpus = 0
    util = 0
    cores = []
    for line in info:
        core_util = int(line[0])
        cores.append(("core%d" % num_cpus, core_util))
        util += core_util
        num_cpus += 1
    if num_cpus == 0:
        return 3, "No data found in SNMP output"
    util = float(util) / num_cpus
    return check_cpu_util(util, params, cores=cores)

check_info["stonesoft_firewall_cpu"] = {
    'inventory_function': inventory_stonesoft_firewall_cpu,
    'check_function': check_stonesoft_firewall_cpu,
    'service_description': 'CPU utilization',
    'has_perfdata': True,
    'snmp_info': ('.1.3.6.1.4.1.1369.6.1.1', ['4.0']),
    'snmp_scan_function': lambda oid: oid('.1.3.6.1.2.1.1.2.0') == '.1.3.6.1.4.1.1369.5.2',
    'group': 'cpu_utilization_os',
    'includes': ['cpu_util.include'],
    'default_levels_variable': 'hr_cpu_default_levels',
}
